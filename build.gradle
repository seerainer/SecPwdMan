plugins {
    id 'java'
    id 'eclipse'
    id 'application'
    id 'org.graalvm.buildtools.native' version '0.10.1'
}

group = 'io.github.secpwdman'
version = '0.9.2'

repositories {
    mavenCentral()
}

def swtArtifact = 'org.eclipse.swt.'
def os = System.getProperty("os.name")
if (os.equals("Linux")) { swtArtifact += 'gtk.linux.' }
else if (os.equals("Mac OS X")) { swtArtifact += 'cocoa.macosx.' }
else if (os.startsWith("Win")) { swtArtifact += 'win32.win32.' }

def arch = System.getProperty("os.arch")
if (arch == "amd64" || arch == "x86_64") { swtArtifact += 'x86_64' }
else if (arch == "aarch64") { swtArtifact += 'aarch64' }

dependencies {
    implementation('commons-validator:commons-validator:1.8.0') {
        exclude group: 'commons-beanutils', module: 'commons-beanutils'
        exclude group: 'commons-collections', module: 'commons-collections'
        exclude group: 'commons-digester', module: 'commons-digester'
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    implementation 'com.github.skjolber.sesseltjonna-csv:parser:1.0.25'
    implementation 'com.grack:nanojson:1.9'
    implementation 'com.nulab-inc:zxcvbn:1.9.0'
    implementation 'com.password4j:password4j:1.8.2'
    implementation("org.eclipse.platform:${swtArtifact}:3.125.0") {
        exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt'
    }
    implementation 'org.slf4j:slf4j-nop:2.0.13'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'io.github.secpwdman.SecPwdMan'
}

graalvmNative {
    testSupport = false
    toolchainDetection = true

    binaries {
        main {
            imageName = 'SecPwdMan'
            mainClass = application.mainClass
            buildArgs.add('-Ob')
            buildArgs.add('-march=compatibility')
            buildArgs.add('--no-fallback')
            buildArgs.add('-R:MinHeapSize=32m')
            buildArgs.add('-R:MaxHeapSize=2g')
            buildArgs.add('-R:MaxNewSize=32m')
            useFatJar = true
        }
    }
}

tasks.withType(Jar).configureEach {
    exclude 'META-INF/ECLIPSE_.RSA'
    exclude 'META-INF/ECLIPSE_.SF'
    manifest {
	    attributes 'Main-Class': application.mainClass
    }
}
